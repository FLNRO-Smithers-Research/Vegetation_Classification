###sum values
Cov1$Value <- apply(Cov1[,c(10,13,14)],1,FUN = function(x){sum(scoreVals$Value[scoreVals$Code %in% x])})
Cov1$Value <- Cov1$Value*(Cov1[,4]/100)
Cov1 <- merge(Cov1, typeCodes, by = "Species", all.x = TRUE)
Cov1$Value <- ifelse(Cov1$Type %in% c(9,10,11,13), Cov1$Value/2, Cov1$Value)
sumA <- sum(Cov1$Value)
# Unit k vs j
Cov2 <- CovMatrix[CovMatrix[,6] >= 60 & !is.na(CovMatrix[,6]),]###remove < 60% constancy for k unit
Cov2$ConstDiff <- abs(Cov2[,6] - Cov2[,3])
Cov2$Differential <- ifelse(Cov2$ConstDiff >= 80,"d1",
ifelse(Cov2$ConstDiff >= 60,"d2",
ifelse(Cov2$ConstDiff >= 40,"d3",NA)))
Cov2$SigA <- ifelse(Cov2[,2] <= 0.1,0,
ifelse(Cov2[,2] <= 0.3,1,
ifelse(Cov2[,2] <= 1,2,
ifelse(Cov2[,2] <= 2.2,3,
ifelse(Cov2[,2] <= 5,4,
ifelse(Cov2[,2] <= 10, 5,
ifelse(Cov2[,2] <= 20,6,
ifelse(Cov2[,2] <= 33,7,
ifelse(Cov2[,2] <= 50,8,
ifelse(Cov2[,2] <= 75,9,10))))))))))
Cov2$SigB <- ifelse(Cov2[,5] <= 0.1,0,
ifelse(Cov2[,5] <= 0.3,1,
ifelse(Cov2[,5] <= 1,2,
ifelse(Cov2[,5] <= 2.2,3,
ifelse(Cov2[,5] <= 5,4,
ifelse(Cov2[,5] <= 10, 5,
ifelse(Cov2[,5] <= 20,6,
ifelse(Cov2[,5] <= 33,7,
ifelse(Cov2[,5] <= 50,8,
ifelse(Cov2[,5] <= 75,9,10))))))))))
Cov2$SigDiff <- Cov2$SigB - Cov2$SigA
Cov2 <- merge(Cov2, domDiffCls, by = "SigDiff", all.x = TRUE)
Cov2$DomDiff <- ifelse(Cov2$SigDiff < 6, NA, Cov2$SigDiff)
Cov2$Const <- ifelse(Cov2$SigB >= 6,"cd",
ifelse(Cov2$SigB >= 3, "c","cm"))
###sum values
Cov2$Value <- apply(Cov2[,c(10,13,14)],1,FUN = function(x){sum(scoreVals$Value[scoreVals$Code %in% x])})
Cov2$Value <- Cov2$Value*(Cov2[,4]/100)
Cov2 <- merge(Cov2, typeCodes, by = "Species", all.x = TRUE)
Cov2$Value <- ifelse(Cov2$Type %in% c(9,10,11,13), Cov2$Value/2, Cov2$Value)
sumB <- sum(Cov2$Value)
totDiff <- sumA+sumB
outTemp <- data.frame(Groups = paste(select[1],"|",select[2]), Score = totDiff)
outTemp
}
View(differential)
View(differential)
typeCodes <- unique(differential[,c(7)])
CovConst <- melt(differential)
selectUnits <- unique(as.character(CovConst$Group))
len <- length(selectUnits)
##Loop to calculate pairwise diagnostics for every possible combination (returns score for each pair)
out <- foreach(j = (1:(len-1)), .combine = rbind, .packages = c("foreach","reshape2")) %:%
foreach(k = ((j+1):len), .combine = rbind, .packages = c("foreach","reshape2")) %dopar% {
select <- selectUnits[c(j,k)]
CovTemp <- CovConst[CovConst$Group %in% select,] ##subset
CovMatrix <- dcast(CovTemp, Species ~ Group + variable, value.var = "value")
CovMatrix[is.na(CovMatrix)] <- 0
# Unit j vs k
Cov1 <- CovMatrix[CovMatrix[,3] >= 60 & !is.na(CovMatrix[,3]),]###remove < 60% constancy for j unit
Cov1$ConstDiff <- abs(Cov1[,3] - Cov1[,6])
Cov1$Differential <- ifelse(Cov1$ConstDiff >= 80,"d1",
ifelse(Cov1$ConstDiff >= 60,"d2",
ifelse(Cov1$ConstDiff >= 40,"d3",NA)))
Cov1$SigA <- ifelse(Cov1[,2] <= 0.1,0,
ifelse(Cov1[,2] <= 0.3,1,
ifelse(Cov1[,2] <= 1,2,
ifelse(Cov1[,2] <= 2.2,3,
ifelse(Cov1[,2] <= 5,4,
ifelse(Cov1[,2] <= 10, 5,
ifelse(Cov1[,2] <= 20,6,
ifelse(Cov1[,2] <= 33,7,
ifelse(Cov1[,2] <= 50,8,
ifelse(Cov1[,2] <= 75,9,10))))))))))
Cov1$SigB <- ifelse(Cov1[,5] <= 0.1,0,
ifelse(Cov1[,5] <= 0.3,1,
ifelse(Cov1[,5] <= 1,2,
ifelse(Cov1[,5] <= 2.2,3,
ifelse(Cov1[,5] <= 5,4,
ifelse(Cov1[,5] <= 10, 5,
ifelse(Cov1[,5] <= 20,6,
ifelse(Cov1[,5] <= 33,7,
ifelse(Cov1[,5] <= 50,8,
ifelse(Cov1[,5] <= 75,9,10))))))))))
Cov1$SigDiff <- Cov1$SigA - Cov1$SigB
Cov1 <- merge(Cov1, domDiffCls, by = "SigDiff", all.x = TRUE)
Cov1$DomDiff <- ifelse(Cov1$SigDiff < 6, NA, Cov1$SigDiff)
Cov1$Const <- ifelse(Cov1$SigA >= 6,"cd",
ifelse(Cov1$SigA >= 3, "c","cm"))
###sum values
Cov1$Value <- apply(Cov1[,c(10,13,14)],1,FUN = function(x){sum(scoreVals$Value[scoreVals$Code %in% x])})
Cov1$Value <- Cov1$Value*(Cov1[,4]/100)
Cov1 <- merge(Cov1, typeCodes, by = "Species", all.x = TRUE)
Cov1$Value <- ifelse(Cov1$Type %in% c(9,10,11,13), Cov1$Value/2, Cov1$Value)
sumA <- sum(Cov1$Value)
# Unit k vs j
Cov2 <- CovMatrix[CovMatrix[,6] >= 60 & !is.na(CovMatrix[,6]),]###remove < 60% constancy for k unit
Cov2$ConstDiff <- abs(Cov2[,6] - Cov2[,3])
Cov2$Differential <- ifelse(Cov2$ConstDiff >= 80,"d1",
ifelse(Cov2$ConstDiff >= 60,"d2",
ifelse(Cov2$ConstDiff >= 40,"d3",NA)))
Cov2$SigA <- ifelse(Cov2[,2] <= 0.1,0,
ifelse(Cov2[,2] <= 0.3,1,
ifelse(Cov2[,2] <= 1,2,
ifelse(Cov2[,2] <= 2.2,3,
ifelse(Cov2[,2] <= 5,4,
ifelse(Cov2[,2] <= 10, 5,
ifelse(Cov2[,2] <= 20,6,
ifelse(Cov2[,2] <= 33,7,
ifelse(Cov2[,2] <= 50,8,
ifelse(Cov2[,2] <= 75,9,10))))))))))
Cov2$SigB <- ifelse(Cov2[,5] <= 0.1,0,
ifelse(Cov2[,5] <= 0.3,1,
ifelse(Cov2[,5] <= 1,2,
ifelse(Cov2[,5] <= 2.2,3,
ifelse(Cov2[,5] <= 5,4,
ifelse(Cov2[,5] <= 10, 5,
ifelse(Cov2[,5] <= 20,6,
ifelse(Cov2[,5] <= 33,7,
ifelse(Cov2[,5] <= 50,8,
ifelse(Cov2[,5] <= 75,9,10))))))))))
Cov2$SigDiff <- Cov2$SigB - Cov2$SigA
Cov2 <- merge(Cov2, domDiffCls, by = "SigDiff", all.x = TRUE)
Cov2$DomDiff <- ifelse(Cov2$SigDiff < 6, NA, Cov2$SigDiff)
Cov2$Const <- ifelse(Cov2$SigB >= 6,"cd",
ifelse(Cov2$SigB >= 3, "c","cm"))
###sum values
Cov2$Value <- apply(Cov2[,c(10,13,14)],1,FUN = function(x){sum(scoreVals$Value[scoreVals$Code %in% x])})
Cov2$Value <- Cov2$Value*(Cov2[,4]/100)
Cov2 <- merge(Cov2, typeCodes, by = "Species", all.x = TRUE)
Cov2$Value <- ifelse(Cov2$Type %in% c(9,10,11,13), Cov2$Value/2, Cov2$Value)
sumB <- sum(Cov2$Value)
totDiff <- sumA+sumB
outTemp <- data.frame(Groups = paste(select[1],"|",select[2]), Score = totDiff)
outTemp
}
View(differential)
###Read in data
load("VegDat_Clean.RData")### created in VegClass script
vegAll <- vegData
typeCodes <- unique(vegAll[,c(2,3)])
####Read hierachy table
hierClass <- read.csv("BorealHier.csv", stringsAsFactors = FALSE)
colnames(hierClass)[1:12]=c("PlotNumber", "Region", "Class", "Order", "SubOrder", "Alliance", "SubAlliance", "Association", "SubAssociation", "Facies", "Working", "SiteSeries")
#Create lowest working hierarchical units
hierClass$SubAssociation <- ifelse(hierClass$SubAssociation == "",hierClass$Association,hierClass$SubAssociation) ##if SubAssoc blank, fill with Association
##selectUnits <- select.list(choices = unique(hierClass$SubAssoc), graphics = TRUE, multiple = TRUE) ##if you only want to compare certain units
selectUnits <- unique(hierClass$SubAssociation[hierClass$SubAssociation != ""]) ###All non-blank sub associations
subPlots <- hierClass[hierClass$SubAssociation %in% selectUnits, c("PlotNumber","SubAssociation")] ## plot by root hierarchy unit
##Merge plot data and hierachy
subPlots <- merge(subPlots, vegAll[,c(1:4)], by = "PlotNumber", all.x = TRUE)
vegData <- subPlots
vegData <- vegData[!is.na(vegData$Cover),]
vegData <- vegData[vegData$Cover != 0,]
vegData <- vegData[!is.na(vegData$SubAssoc),] ##remove plots not assigned to any SubAssoc
###Roll up into groups with mean cover and % constancy
temp <- foreach(SS = selectUnits, .combine = rbind, .packages = "foreach") %dopar% {
sub <- vegData[vegData$SubAssoc == SS,]
num <- length(unique(sub$PlotNumber))
foreach(Spp = unique(sub$Species), .combine = rbind) %do% {
sub2 <- sub[sub$Species == Spp,]
numSpp <- dim(unique(sub2[,1:2]))[1]
covsum <- sum(sub2$Cover)
mean <- covsum/num
const <- numSpp/num
out <- data.frame(Group = SS, Species = Spp, MeanCov = mean, Constancy = const*100, NoPlots = num)
}
}
View(temp)
View(temp)
differential <-differential(c("Group", "Species", "MeanCov", "Constancy" ))
differential <-differential[([c("Group", "Species", "MeanCov", "Constancy" )]
differential <-differential[(c("Group", "Species", "MeanCov", "Constancy" )]
differential <-differential[,(c("Group", "Species", "MeanCov", "Constancy" )]
differential <- differential[(c("Group", "Species", "MeanCov", "Constancy" ),]
differential <- differential[c("Group", "Species", "MeanCov", "Constancy" ),]
View(differential)
############################################################################################
load("UnitSummary.RData")
###Lookup tables
domDiffCls <- data.frame(SigDiff = c(5,4,3,2), DomDiff = c("dd1","dd2","dd3","dd4"))
scoreVals <- data.frame(Code = c("d1","d2","d3","dd1","dd2","dd3","dd4","c","cd","cm"),
Value = c(3,2,0,6,4,3,2,1,2,0))
typeCodes <- unique(differential[,c(7)])
differential <- differential[c("Group", "Species", "MeanCov", "Constancy" ),]
View(differential)
############################################################################################
load("UnitSummary.RData")
###Lookup tables
domDiffCls <- data.frame(SigDiff = c(5,4,3,2), DomDiff = c("dd1","dd2","dd3","dd4"))
scoreVals <- data.frame(Code = c("d1","d2","d3","dd1","dd2","dd3","dd4","c","cd","cm"),
Value = c(3,2,0,6,4,3,2,1,2,0))
typeCodes <- unique(differential[,c(7)])
differential <- differential[,c("Group", "Species", "MeanCov", "Constancy" )]
View(differential)
CovConst <- melt(differential)
selectUnits <- unique(as.character(CovConst$Group))
len <- length(selectUnits)
##Loop to calculate pairwise diagnostics for every possible combination (returns score for each pair)
out <- foreach(j = (1:(len-1)), .combine = rbind, .packages = c("foreach","reshape2")) %:%
foreach(k = ((j+1):len), .combine = rbind, .packages = c("foreach","reshape2")) %dopar% {
select <- selectUnits[c(j,k)]
CovTemp <- CovConst[CovConst$Group %in% select,] ##subset
CovMatrix <- dcast(CovTemp, Species ~ Group + variable, value.var = "value")
CovMatrix[is.na(CovMatrix)] <- 0
# Unit j vs k
Cov1 <- CovMatrix[CovMatrix[,3] >= 60 & !is.na(CovMatrix[,3]),]###remove < 60% constancy for j unit
Cov1$ConstDiff <- abs(Cov1[,3] - Cov1[,6])
Cov1$Differential <- ifelse(Cov1$ConstDiff >= 80,"d1",
ifelse(Cov1$ConstDiff >= 60,"d2",
ifelse(Cov1$ConstDiff >= 40,"d3",NA)))
Cov1$SigA <- ifelse(Cov1[,2] <= 0.1,0,
ifelse(Cov1[,2] <= 0.3,1,
ifelse(Cov1[,2] <= 1,2,
ifelse(Cov1[,2] <= 2.2,3,
ifelse(Cov1[,2] <= 5,4,
ifelse(Cov1[,2] <= 10, 5,
ifelse(Cov1[,2] <= 20,6,
ifelse(Cov1[,2] <= 33,7,
ifelse(Cov1[,2] <= 50,8,
ifelse(Cov1[,2] <= 75,9,10))))))))))
Cov1$SigB <- ifelse(Cov1[,5] <= 0.1,0,
ifelse(Cov1[,5] <= 0.3,1,
ifelse(Cov1[,5] <= 1,2,
ifelse(Cov1[,5] <= 2.2,3,
ifelse(Cov1[,5] <= 5,4,
ifelse(Cov1[,5] <= 10, 5,
ifelse(Cov1[,5] <= 20,6,
ifelse(Cov1[,5] <= 33,7,
ifelse(Cov1[,5] <= 50,8,
ifelse(Cov1[,5] <= 75,9,10))))))))))
Cov1$SigDiff <- Cov1$SigA - Cov1$SigB
Cov1 <- merge(Cov1, domDiffCls, by = "SigDiff", all.x = TRUE)
Cov1$DomDiff <- ifelse(Cov1$SigDiff < 6, NA, Cov1$SigDiff)
Cov1$Const <- ifelse(Cov1$SigA >= 6,"cd",
ifelse(Cov1$SigA >= 3, "c","cm"))
###sum values
Cov1$Value <- apply(Cov1[,c(10,13,14)],1,FUN = function(x){sum(scoreVals$Value[scoreVals$Code %in% x])})
Cov1$Value <- Cov1$Value*(Cov1[,4]/100)
Cov1 <- merge(Cov1, typeCodes, by = "Species", all.x = TRUE)
Cov1$Value <- ifelse(Cov1$Type %in% c(9,10,11,13), Cov1$Value/2, Cov1$Value)
sumA <- sum(Cov1$Value)
# Unit k vs j
Cov2 <- CovMatrix[CovMatrix[,6] >= 60 & !is.na(CovMatrix[,6]),]###remove < 60% constancy for k unit
Cov2$ConstDiff <- abs(Cov2[,6] - Cov2[,3])
Cov2$Differential <- ifelse(Cov2$ConstDiff >= 80,"d1",
ifelse(Cov2$ConstDiff >= 60,"d2",
ifelse(Cov2$ConstDiff >= 40,"d3",NA)))
Cov2$SigA <- ifelse(Cov2[,2] <= 0.1,0,
ifelse(Cov2[,2] <= 0.3,1,
ifelse(Cov2[,2] <= 1,2,
ifelse(Cov2[,2] <= 2.2,3,
ifelse(Cov2[,2] <= 5,4,
ifelse(Cov2[,2] <= 10, 5,
ifelse(Cov2[,2] <= 20,6,
ifelse(Cov2[,2] <= 33,7,
ifelse(Cov2[,2] <= 50,8,
ifelse(Cov2[,2] <= 75,9,10))))))))))
Cov2$SigB <- ifelse(Cov2[,5] <= 0.1,0,
ifelse(Cov2[,5] <= 0.3,1,
ifelse(Cov2[,5] <= 1,2,
ifelse(Cov2[,5] <= 2.2,3,
ifelse(Cov2[,5] <= 5,4,
ifelse(Cov2[,5] <= 10, 5,
ifelse(Cov2[,5] <= 20,6,
ifelse(Cov2[,5] <= 33,7,
ifelse(Cov2[,5] <= 50,8,
ifelse(Cov2[,5] <= 75,9,10))))))))))
Cov2$SigDiff <- Cov2$SigB - Cov2$SigA
Cov2 <- merge(Cov2, domDiffCls, by = "SigDiff", all.x = TRUE)
Cov2$DomDiff <- ifelse(Cov2$SigDiff < 6, NA, Cov2$SigDiff)
Cov2$Const <- ifelse(Cov2$SigB >= 6,"cd",
ifelse(Cov2$SigB >= 3, "c","cm"))
###sum values
Cov2$Value <- apply(Cov2[,c(10,13,14)],1,FUN = function(x){sum(scoreVals$Value[scoreVals$Code %in% x])})
Cov2$Value <- Cov2$Value*(Cov2[,4]/100)
Cov2 <- merge(Cov2, typeCodes, by = "Species", all.x = TRUE)
Cov2$Value <- ifelse(Cov2$Type %in% c(9,10,11,13), Cov2$Value/2, Cov2$Value)
sumB <- sum(Cov2$Value)
totDiff <- sumA+sumB
outTemp <- data.frame(Groups = paste(select[1],"|",select[2]), Score = totDiff)
outTemp
}
j = 5
k = 6
select <- selectUnits[c(j,k)]
CovTemp <- CovConst[CovConst$Group %in% select,] ##subset
CovMatrix <- dcast(CovTemp, Species ~ Group + variable, value.var = "value")
CovMatrix[is.na(CovMatrix)] <- 0
# Unit j vs k
Cov1 <- CovMatrix[CovMatrix[,3] >= 60 & !is.na(CovMatrix[,3]),]###remove < 60% constancy for j unit
Cov1$ConstDiff <- abs(Cov1[,3] - Cov1[,6])
Cov1$Differential <- ifelse(Cov1$ConstDiff >= 80,"d1",
ifelse(Cov1$ConstDiff >= 60,"d2",
ifelse(Cov1$ConstDiff >= 40,"d3",NA)))
Cov1$SigA <- ifelse(Cov1[,2] <= 0.1,0,
ifelse(Cov1[,2] <= 0.3,1,
ifelse(Cov1[,2] <= 1,2,
ifelse(Cov1[,2] <= 2.2,3,
ifelse(Cov1[,2] <= 5,4,
ifelse(Cov1[,2] <= 10, 5,
ifelse(Cov1[,2] <= 20,6,
ifelse(Cov1[,2] <= 33,7,
ifelse(Cov1[,2] <= 50,8,
ifelse(Cov1[,2] <= 75,9,10))))))))))
Cov1$SigB <- ifelse(Cov1[,5] <= 0.1,0,
ifelse(Cov1[,5] <= 0.3,1,
ifelse(Cov1[,5] <= 1,2,
ifelse(Cov1[,5] <= 2.2,3,
ifelse(Cov1[,5] <= 5,4,
ifelse(Cov1[,5] <= 10, 5,
ifelse(Cov1[,5] <= 20,6,
ifelse(Cov1[,5] <= 33,7,
ifelse(Cov1[,5] <= 50,8,
ifelse(Cov1[,5] <= 75,9,10))))))))))
# Unit j vs k
Cov1 <- CovMatrix[CovMatrix[,3] >= 60 & !is.na(CovMatrix[,3]),]###remove < 60% constancy for j unit
Cov1$ConstDiff <- abs(Cov1[,3] - Cov1[,6])
View(Cov1)
Cov1$ConstDiff <- abs(Cov1[,3] - Cov1[,5])
Cov1$Differential <- ifelse(Cov1$ConstDiff >= 80,"d1",
ifelse(Cov1$ConstDiff >= 60,"d2",
ifelse(Cov1$ConstDiff >= 40,"d3",NA)))
Cov1$SigA <- ifelse(Cov1[,2] <= 0.1,0,
ifelse(Cov1[,2] <= 0.3,1,
ifelse(Cov1[,2] <= 1,2,
ifelse(Cov1[,2] <= 2.2,3,
ifelse(Cov1[,2] <= 5,4,
ifelse(Cov1[,2] <= 10, 5,
ifelse(Cov1[,2] <= 20,6,
ifelse(Cov1[,2] <= 33,7,
ifelse(Cov1[,2] <= 50,8,
ifelse(Cov1[,2] <= 75,9,10))))))))))
Cov1$SigB <- ifelse(Cov1[,4] <= 0.1,0,
ifelse(Cov1[,4] <= 0.3,1,
ifelse(Cov1[,4] <= 1,2,
ifelse(Cov1[,4] <= 2.2,3,
ifelse(Cov1[,4] <= 5,4,
ifelse(Cov1[,4] <= 10, 5,
ifelse(Cov1[,4] <= 20,6,
ifelse(Cov1[,4] <= 33,7,
ifelse(Cov1[,4] <= 50,8,
ifelse(Cov1[,4] <= 75,9,10))))))))))
Cov1$SigDiff <- Cov1$SigA - Cov1$SigB
Cov1 <- merge(Cov1, domDiffCls, by = "SigDiff", all.x = TRUE)
Cov1$DomDiff <- ifelse(Cov1$SigDiff < 6, NA, Cov1$SigDiff)
Cov1$Const <- ifelse(Cov1$SigA >= 6,"cd",
ifelse(Cov1$SigA >= 3, "c","cm"))
###sum values
Cov1$Value <- apply(Cov1[,c(10,13,14)],1,FUN = function(x){sum(scoreVals$Value[scoreVals$Code %in% x])})
###sum values
Cov1$Value <- apply(Cov1[,c(8,11,12)],1,FUN = function(x){sum(scoreVals$Value[scoreVals$Code %in% x])})
Cov1$Value <- Cov1$Value*(Cov1[,4]/100)
Cov1 <- merge(Cov1, typeCodes, by = "Species", all.x = TRUE)
Cov1 <- merge(Cov1, typeCodes, by = "Species", all.x = TRUE)
View(temp)
View(vegAll)
typeC
typeCodes <- unique(vegAll[,c(2,3)])
View(differential)
############################################################################################
load("UnitSummary.RData")
###Lookup tables
domDiffCls <- data.frame(SigDiff = c(5,4,3,2), DomDiff = c("dd1","dd2","dd3","dd4"))
scoreVals <- data.frame(Code = c("d1","d2","d3","dd1","dd2","dd3","dd4","c","cd","cm"),
Value = c(3,2,0,6,4,3,2,1,2,0))
typeCodes <- unique(differential[,c(7)])
View(differential)
typeCodes <- unique(differential[,c(1,7)])
differential <- differential[,c("Group", "Species", "MeanCov", "Constancy" )]
CovConst <- melt(differential)
selectUnits <- unique(as.character(CovConst$Group))
len <- length(selectUnits)
j = 5
k = 6
select <- selectUnits[c(j,k)]
CovTemp <- CovConst[CovConst$Group %in% select,] ##subset
CovMatrix <- dcast(CovTemp, Species ~ Group + variable, value.var = "value")
CovMatrix[is.na(CovMatrix)] <- 0
# Unit j vs k
Cov1 <- CovMatrix[CovMatrix[,3] >= 60 & !is.na(CovMatrix[,3]),]###remove < 60% constancy for j unit
Cov1$ConstDiff <- abs(Cov1[,3] - Cov1[,5])
Cov1$Differential <- ifelse(Cov1$ConstDiff >= 80,"d1",
ifelse(Cov1$ConstDiff >= 60,"d2",
ifelse(Cov1$ConstDiff >= 40,"d3",NA)))
Cov1$SigA <- ifelse(Cov1[,2] <= 0.1,0,
ifelse(Cov1[,2] <= 0.3,1,
ifelse(Cov1[,2] <= 1,2,
ifelse(Cov1[,2] <= 2.2,3,
ifelse(Cov1[,2] <= 5,4,
ifelse(Cov1[,2] <= 10, 5,
ifelse(Cov1[,2] <= 20,6,
ifelse(Cov1[,2] <= 33,7,
ifelse(Cov1[,2] <= 50,8,
ifelse(Cov1[,2] <= 75,9,10))))))))))
Cov1$SigB <- ifelse(Cov1[,4] <= 0.1,0,
ifelse(Cov1[,4] <= 0.3,1,
ifelse(Cov1[,4] <= 1,2,
ifelse(Cov1[,4] <= 2.2,3,
ifelse(Cov1[,4] <= 5,4,
ifelse(Cov1[,4] <= 10, 5,
ifelse(Cov1[,4] <= 20,6,
ifelse(Cov1[,4] <= 33,7,
ifelse(Cov1[,4] <= 50,8,
ifelse(Cov1[,4] <= 75,9,10))))))))))
Cov1$SigDiff <- Cov1$SigA - Cov1$SigB
Cov1 <- merge(Cov1, domDiffCls, by = "SigDiff", all.x = TRUE)
Cov1$DomDiff <- ifelse(Cov1$SigDiff < 6, NA, Cov1$SigDiff)
Cov1$Const <- ifelse(Cov1$SigA >= 6,"cd",
ifelse(Cov1$SigA >= 3, "c","cm"))
###sum values
Cov1$Value <- apply(Cov1[,c(8,11,12)],1,FUN = function(x){sum(scoreVals$Value[scoreVals$Code %in% x])})
Cov1$Value <- Cov1$Value*(Cov1[,4]/100)
Cov1 <- merge(Cov1, typeCodes, by = "Species", all.x = TRUE)
Cov1$Value <- ifelse(Cov1$Type %in% c(9,10,11,13), Cov1$Value/2, Cov1$Value)
sumA <- sum(Cov1$Value)
# Unit k vs j
Cov2 <- CovMatrix[CovMatrix[,6] >= 60 & !is.na(CovMatrix[,6]),]###remove < 60% constancy for k unit
Cov2$ConstDiff <- abs(Cov2[,6] - Cov2[,3])
Cov2$Differential <- ifelse(Cov2$ConstDiff >= 80,"d1",
ifelse(Cov2$ConstDiff >= 60,"d2",
ifelse(Cov2$ConstDiff >= 40,"d3",NA)))
# Unit k vs j
Cov2 <- CovMatrix[CovMatrix[,4] >= 60 & !is.na(CovMatrix[,6]),]###remove < 60% constancy for k unit
# Unit k vs j
Cov2 <- CovMatrix[CovMatrix[,4] >= 60 & !is.na(CovMatrix[,4]),]###remove < 60% constancy for k unit
Cov2$ConstDiff <- abs(Cov2[,4] - Cov2[,3])
Cov2$Differential <- ifelse(Cov2$ConstDiff >= 80,"d1",
ifelse(Cov2$ConstDiff >= 60,"d2",
ifelse(Cov2$ConstDiff >= 40,"d3",NA)))
Cov2$SigA <- ifelse(Cov2[,2] <= 0.1,0,
ifelse(Cov2[,2] <= 0.3,1,
ifelse(Cov2[,2] <= 1,2,
ifelse(Cov2[,2] <= 2.2,3,
ifelse(Cov2[,2] <= 5,4,
ifelse(Cov2[,2] <= 10, 5,
ifelse(Cov2[,2] <= 20,6,
ifelse(Cov2[,2] <= 33,7,
ifelse(Cov2[,2] <= 50,8,
ifelse(Cov2[,2] <= 75,9,10))))))))))
Cov2$SigB <- ifelse(Cov2[,4] <= 0.1,0,
ifelse(Cov2[,4] <= 0.3,1,
ifelse(Cov2[,4] <= 1,2,
ifelse(Cov2[,4] <= 2.2,3,
ifelse(Cov2[,4] <= 5,4,
ifelse(Cov2[,4] <= 10, 5,
ifelse(Cov2[,4] <= 20,6,
ifelse(Cov2[,4] <= 33,7,
ifelse(Cov2[,4] <= 50,8,
ifelse(Cov2[,4] <= 75,9,10))))))))))
Cov2$SigDiff <- Cov2$SigB - Cov2$SigA
Cov2 <- merge(Cov2, domDiffCls, by = "SigDiff", all.x = TRUE)
Cov2$DomDiff <- ifelse(Cov2$SigDiff < 6, NA, Cov2$SigDiff)
Cov2$Const <- ifelse(Cov2$SigB >= 6,"cd",
ifelse(Cov2$SigB >= 3, "c","cm"))
###sum values
Cov2$Value <- apply(Cov2[,c(10,13,14)],1,FUN = function(x){sum(scoreVals$Value[scoreVals$Code %in% x])})
View(Cov2)
# Unit k vs j
Cov2 <- CovMatrix[CovMatrix[,4] >= 60 & !is.na(CovMatrix[,4]),]###remove < 60% constancy for k unit
CovMatrix <- dcast(CovTemp, Species ~ Group + variable, value.var = "value")
CovMatrix[is.na(CovMatrix)] <- 0
# Unit k vs j
Cov2 <- CovMatrix[CovMatrix[,4] >= 60 & !is.na(CovMatrix[,4]),]###remove < 60% constancy for k unit
View(CovMatrix)
# Unit k vs j
Cov2 <- CovMatrix[CovMatrix[,4] >= 60 & !is.na(CovMatrix[,4]),]###remove < 60% constancy for k unit
# Unit k vs j
Cov2 <- CovMatrix[CovMatrix[,5] >= 60 & !is.na(CovMatrix[,5]),]###remove < 60% constancy for k unit
3
Cov2$ConstDiff <- abs(Cov2[,5] - Cov2[,3])
Cov2$Differential <- ifelse(Cov2$ConstDiff >= 80,"d1",
ifelse(Cov2$ConstDiff >= 60,"d2",
ifelse(Cov2$ConstDiff >= 40,"d3",NA)))
Cov2$SigA <- ifelse(Cov2[,2] <= 0.1,0,
ifelse(Cov2[,2] <= 0.3,1,
ifelse(Cov2[,2] <= 1,2,
ifelse(Cov2[,2] <= 2.2,3,
ifelse(Cov2[,2] <= 5,4,
ifelse(Cov2[,2] <= 10, 5,
ifelse(Cov2[,2] <= 20,6,
ifelse(Cov2[,2] <= 33,7,
ifelse(Cov2[,2] <= 50,8,
ifelse(Cov2[,2] <= 75,9,10))))))))))
Cov2$SigB <- ifelse(Cov2[,4] <= 0.1,0,
ifelse(Cov2[,4] <= 0.3,1,
ifelse(Cov2[,4] <= 1,2,
ifelse(Cov2[,4] <= 2.2,3,
ifelse(Cov2[,4] <= 5,4,
ifelse(Cov2[,4] <= 10, 5,
ifelse(Cov2[,4] <= 20,6,
ifelse(Cov2[,4] <= 33,7,
ifelse(Cov2[,4] <= 50,8,
ifelse(Cov2[,4] <= 75,9,10))))))))))
Cov2$SigDiff <- Cov2$SigB - Cov2$SigA
Cov2 <- merge(Cov2, domDiffCls, by = "SigDiff", all.x = TRUE)
Cov2$DomDiff <- ifelse(Cov2$SigDiff < 6, NA, Cov2$SigDiff)
Cov2$Const <- ifelse(Cov2$SigB >= 6,"cd",
ifelse(Cov2$SigB >= 3, "c","cm"))
###sum values
Cov2$Value <- apply(Cov2[,c(10,13,14)],1,FUN = function(x){sum(scoreVals$Value[scoreVals$Code %in% x])})
###sum values
Cov2$Value <- apply(Cov2[,c(8,11,12)],1,FUN = function(x){sum(scoreVals$Value[scoreVals$Code %in% x])})
Cov2$Value <- Cov2$Value*(Cov2[,4]/100)
Cov2 <- merge(Cov2, typeCodes, by = "Species", all.x = TRUE)
Cov2$Value <- ifelse(Cov2$Type %in% c(9,10,11,13), Cov2$Value/2, Cov2$Value)
sumB <- sum(Cov2$Value)
totDiff <- sumA+sumB
outTemp <- data.frame(Groups = paste(select[1],"|",select[2]), Score = totDiff)
outTemp
